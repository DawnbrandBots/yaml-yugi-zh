# SPDX-FileCopyrightText: Â© 2022 Kevin Lu
# SPDX-Licence-Identifier: LGPL-3.0-or-later
name: Scrape OurOCG for card text

on:
  workflow_dispatch:
    inputs:
      revision:
        description: MyCard GitHub commit SHA
        required: false

jobs:
  scrape:
    # https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration
    # Since each job can run for a maximum of six hours, and we wait after each request to minimize server load,
    # we partition the almost-12000 official cards into multiple jobs with this matrix and run them sequentially.
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        # 12 partitions of 1000
        partition: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          cache: pip
      - run: pip install -r src/requirements.txt
      - if: ${{ github.event.inputs.revision }}
        run: curl -fsSLO https://github.com/mycard/ygopro-database/raw/${{ github.event.inputs.revision }}/locales/zh-CN/cards.cdb
      - if: ${{ !github.event.inputs.revision }}
        run: curl -fsSLO https://github.com/DawnbrandBots/yaml-yugi/raw/aggregate/cards.json
      - if: ${{ github.event.inputs.revision }}
        run: python3 src/job.py --cdb cards.cdb --size 1000 --index ${{ matrix.partition }} --output zh-CN
      - if: ${{ !github.event.inputs.revision }}
        run: python3 src/job.py --json cards.json --size 1000 --index ${{ matrix.partition }} --output zh-CN
      - name: Commit
        if: ${{ always() }}
        run: |
          git config user.name GitHub Actions
          git config user.email noreply@github.com
          git add .
          git commit -m "Scrape partition ${{ matrix.partition }}, size 1000 (validation), ${{ github.event.inputs.revision }}"
          git pull --rebase
          git push
